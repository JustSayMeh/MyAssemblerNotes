CMP TEST используются для сравнения двух операндов. Операнды могут быть как регистрами, так и адреса памяти или константами.
CMP производит вычитание о1 из о2, изменяя регистр знаков.
TEST вычисляет поразрядное И. Результат в регистре признаков

cmp ax, 4
cmp [diam], ax
cmp 4, [bxc]
test ax, 0000010b


JMP [тип_перехода] операнд

типы перехода:
Короткий	- short	[операнд 8-битный, адрес -128, +127]
Ближний		- near	[длина зависит от режима процессора. Реал - один сегмент(IP). Защ - 4гб(EIP)]
Дальний		- far	[Кроме IP модифицируется еще и CS]


Метка:

jmp Метка


Условные переходы:

jz - zf = 1 ; jnz
jc - cf = 1 ; jnc
js - sf = 1 ; jns
jo - of = 1 ; jno

Инструкции для беззнаковых чисел
JE(JZ)	, 	o1 == o2
JNE(JNZ), 	o1 != o2
JA(JNBE),	o1 > o2
JB(JNAE),	o1 < o2
JNA(JBE),	o1 <= o2
JNB(JAE),	o1 >= o2

Для знаковых:
JE(JZ)	,	o1 == o2			
JNE(JNZ),	o1 != o2
JG(JNLE),	o1 > o2
JL(JNGE),	o1 < o2
JNG(JLE),	o1 <= o2
JNL(JGE),	o1 >= o2

Всё после cmp!!!!!!!!!!!!!!!!



Циклы:


for_start:
mov ecx, 10
for_loop:
.......
dec ecx
jnz for_loop
for_end:


В CISC процессорах рода x86 предусмотрена команда LOOP
LOOP Метка
Счетчик - регистр ECX. Он декрементируется

for_start:
mov ecx, 10
for_loop:
.......
loop for_loop
for_end:


Команда LOOPZ позволяет организовать цикл с дополнительным условием

loopz переход, когда cx != 0 и zf = 1

for_start:
mov ecx, 10
for_loop:
.......
.......
.......
cmp bx, 3 ; zf меняется тут
loopz for_loop
for_end:

////for (int i = 10; i > 0 && bx != 3; --i)

!!!!!! loopnz переход, когда cx != 0 и zf = 0 !!!!!!
