Изменение регистра признаков напрямую

CLI - Запрет прерываний
STI - Возврат прерываний

CLD - Сброс флага ID
STD - ...




XCHG - Поменять значения регистров

XCHG o1 o2 
o1 или o2 ОБЯЗАТЕЛЬНО РЕГИСТР



LEA - Сохраняет адрес второго операнда в первый

LEA o1, [o2] - o1 - РЕГИСТР!!!!

lea ebx, [edx*4 + ecx] ; ebx = edx*4 + ecx



Команды для работы со строками:
Строкой ассемблер считает последовательнойсть байтов с окончанием в нулевом байте

STOSB - копирует значение AL в ячейку памяти с адресом [ES:(E)DI]
	В зависимости от значения флага DF увеличивает(0) или уменьшает(1) (E)DI на 1
STOSW - копирует значение AX в ячейку памяти с адресом [ES:(E)DI]
	В зависимости от значения флага DF увеличивает(0) или уменьшает(1) (E)DI на 2
STOSD - копирует значение EAX в ячейку памяти с адресом [ES:EDI]
	В зависимости от значения флага DF увеличивает(0) или уменьшает(1) (E)DI на 4


LODSB - Противоположно STOSB; ESI
LODSW - Противоположно STOSW
LODSD - Противоположно STOSD



MOVS Память, Память - определяет тип адресуемой информации 
MOVSB	- Передает байт адресуемый DS:SI в байт ES:DI
MOVSW	- Передает слово адресуемое DS:SI в байт ES:DI



CMPSB - Сравнивает байт по адресу ES:(E)DI с байтом по адресу DS:(E)SI, уменьшая/увеличивая SI и DI 
CMPSW - Слово
CMPSD - 4 байта


SCASB - Сравнивает значение регистра AL со значением по адресу ES:(E)DI.  
	В зависимости от значения флага DF увеличивает(0) или уменьшает(1) (E)DI на 1
SCASW - AX
SCASD - EAX

REP - Повторяет следующую команду пока (E)CX > 0. (E)CX уменьшается

rep
movsb	; Скопировать первые (E)CX байтов из DS:(E)SI в ES:(E)DI; Местный аналог memcpy

rep
stosb
; Местный memset

REPZ(REPE) позволяет уточнить условие. Следующая итерация наступит, если (E)CX != 0 и ZF установлен!!!!!!!!!
Второе условие инвертируется командой REPNZ


